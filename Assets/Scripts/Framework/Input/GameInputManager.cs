//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/GameInputManager.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace Framework.Input
{
    public partial class @GameInputManager: IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @GameInputManager()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""GameInputManager"",
    ""maps"": [
        {
            ""name"": ""Overview"",
            ""id"": ""76e38aa2-7a08-4363-99ea-c9dc2d800e0b"",
            ""actions"": [
                {
                    ""name"": ""Rotate"",
                    ""type"": ""Value"",
                    ""id"": ""77a5c05c-a881-43a0-9542-c741797fed67"",
                    ""expectedControlType"": ""Delta"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Distance"",
                    ""type"": ""Value"",
                    ""id"": ""b927f465-71d3-453a-8bfe-3d529b300bb4"",
                    ""expectedControlType"": ""Delta"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PrimaryFingerPosition"",
                    ""type"": ""Value"",
                    ""id"": ""4b3a634f-2363-443b-87f8-9929f5a15316"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SecondaryFingerPosition"",
                    ""type"": ""Value"",
                    ""id"": ""4ab22799-8e5d-47a7-99da-448ff51864bc"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PrimaryFingerDelta"",
                    ""type"": ""Value"",
                    ""id"": ""8bf25f15-90d9-46b4-bc7d-d583ac70c247"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SecondaryFingerDelta"",
                    ""type"": ""Value"",
                    ""id"": ""a7b46ba5-2884-46bb-912b-46c6dc8dd7f1"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SecondaryFingerPressed"",
                    ""type"": ""Button"",
                    ""id"": ""8bd4e2dd-2dce-4cde-b52e-141dbaba0b72"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectView"",
                    ""type"": ""Button"",
                    ""id"": ""dcceccb2-b08d-4ae3-885c-864fed8922f7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""da8f231a-d0cb-4097-bbde-d312b1811fd8"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Distance"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Mouse Delta"",
                    ""id"": ""a545e239-b05e-41b4-abba-43e37365db73"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""470cb8fb-191b-41c3-b27e-c17e8ccacff2"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""98433b06-fead-48fa-bee0-b438790e91d6"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""d9e12e34-6006-43cb-afed-b56ecf5af838"",
                    ""path"": ""<Touchscreen>/primaryTouch/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cc90703f-961c-400a-8030-b149807be19d"",
                    ""path"": ""<Touchscreen>/touch0/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryFingerPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0077c55b-7759-4451-88ad-833d68c6c496"",
                    ""path"": ""<Touchscreen>/touch1/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryFingerPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d68704b7-31fb-443f-9961-39e554e24243"",
                    ""path"": ""<Touchscreen>/touch0/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryFingerDelta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f9836d2d-1a09-469f-8bcd-530652ac504d"",
                    ""path"": ""<Touchscreen>/touch1/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryFingerDelta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d42ae33e-4498-4f79-967f-897de287e6da"",
                    ""path"": ""<Touchscreen>/touch1/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryFingerPressed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Mouse"",
                    ""id"": ""7afce478-974e-4829-adcc-b21d3cda7d1c"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectView"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""e6c71839-7d11-4959-9512-65bc975bdc61"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectView"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""2ce73928-9ddf-4bc9-9f12-c0040e1d2053"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectView"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""TouchScreen"",
                    ""id"": ""47b2238a-07e7-40ed-b6b2-997d478c947d"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectView"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""cc839666-2173-420d-aa76-fff0be435554"",
                    ""path"": ""<Touchscreen>/touch0/tap"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectView"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""abf0b378-c2c3-4406-acd1-a28725ba1daa"",
                    ""path"": ""<Touchscreen>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectView"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""Aim"",
            ""id"": ""27ffead6-cc64-42ee-9b17-50bd10bd639e"",
            ""actions"": [
                {
                    ""name"": ""Yaw"",
                    ""type"": ""Value"",
                    ""id"": ""9b883065-b7b3-4db1-b8ed-1f9b4f9d1f9d"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Pitch"",
                    ""type"": ""Value"",
                    ""id"": ""8df3ac73-7e5f-4860-a527-65dbf2e633c4"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Power"",
                    ""type"": ""Value"",
                    ""id"": ""56445e24-fb1f-4677-8cb1-be4a46bbb843"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PitchGyro"",
                    ""type"": ""Value"",
                    ""id"": ""f5da1797-e1a6-44a3-9806-a059636794c3"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Mouse"",
                    ""id"": ""517d84d5-07bf-4f2c-8725-ddecb75eb6a5"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""1fee7223-8809-4741-8a9b-33c6cd8bbdaf"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""f9977e15-a065-4c74-aa4c-da51c60530a2"",
                    ""path"": ""<Mouse>/delta/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""5f8aedb0-00a3-4096-83ee-f3b830925ab9"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""0155a2fa-7d96-4b7f-8753-baf723554d45"",
                    ""path"": ""<Touchscreen>/touch0/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""0818c146-7191-4f26-8b76-d7f0eb654cca"",
                    ""path"": ""<Touchscreen>/touch0/delta/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""4308b53f-98b6-4d58-94e1-d237ab449a4b"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Mouse"",
                    ""id"": ""98dd50bd-b076-438c-b3b9-c54e5b3ac810"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Power"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""5048ec98-d816-4d3e-9ea5-82e807f6eb4b"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Power"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""21eef8cd-c72b-4a68-90ab-70d0a4525113"",
                    ""path"": ""<Mouse>/position/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Power"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""b48ac799-6515-4b6b-a2db-a7021395ae49"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Power"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""2f81063e-4f54-43f2-a2ce-c4d8b81f1ad7"",
                    ""path"": ""<Touchscreen>/touch0/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Power"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""822c7123-17ea-471b-9640-c8523d79d4f8"",
                    ""path"": ""<Touchscreen>/touch0/position/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Power"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""84d2b669-2ad6-47a4-81c1-6c39e56fd527"",
                    ""path"": ""<AttitudeSensor>/attitude"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PitchGyro"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""AimTouch"",
            ""id"": ""ae21be2e-3d58-4b7a-b684-2c4481a7c390"",
            ""actions"": [
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Value"",
                    ""id"": ""6afd4f90-e1d1-4eda-a41a-7940f040941b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""f39e5be9-dbb4-493a-8ff3-5a7fb7e3284e"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""a70fbd47-7d83-4e09-8ffd-23a1771c6c14"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""33e091d2-94ab-4c89-8680-b80365f24e25"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""f1e2eda6-0ed3-4c26-8f35-985b85c91aba"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""84ebac2f-46d4-4b46-bc5d-2b6db0f16fb4"",
                    ""path"": ""<Touchscreen>/touch0/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""ac2966c6-301f-49ab-8a06-3db4ab008fae"",
                    ""path"": ""<Touchscreen>/touch0/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // Overview
            m_Overview = asset.FindActionMap("Overview", throwIfNotFound: true);
            m_Overview_Rotate = m_Overview.FindAction("Rotate", throwIfNotFound: true);
            m_Overview_Distance = m_Overview.FindAction("Distance", throwIfNotFound: true);
            m_Overview_PrimaryFingerPosition = m_Overview.FindAction("PrimaryFingerPosition", throwIfNotFound: true);
            m_Overview_SecondaryFingerPosition = m_Overview.FindAction("SecondaryFingerPosition", throwIfNotFound: true);
            m_Overview_PrimaryFingerDelta = m_Overview.FindAction("PrimaryFingerDelta", throwIfNotFound: true);
            m_Overview_SecondaryFingerDelta = m_Overview.FindAction("SecondaryFingerDelta", throwIfNotFound: true);
            m_Overview_SecondaryFingerPressed = m_Overview.FindAction("SecondaryFingerPressed", throwIfNotFound: true);
            m_Overview_SelectView = m_Overview.FindAction("SelectView", throwIfNotFound: true);
            // Aim
            m_Aim = asset.FindActionMap("Aim", throwIfNotFound: true);
            m_Aim_Yaw = m_Aim.FindAction("Yaw", throwIfNotFound: true);
            m_Aim_Pitch = m_Aim.FindAction("Pitch", throwIfNotFound: true);
            m_Aim_Power = m_Aim.FindAction("Power", throwIfNotFound: true);
            m_Aim_PitchGyro = m_Aim.FindAction("PitchGyro", throwIfNotFound: true);
            // AimTouch
            m_AimTouch = asset.FindActionMap("AimTouch", throwIfNotFound: true);
            m_AimTouch_Shoot = m_AimTouch.FindAction("Shoot", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }

        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }

        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Overview
        private readonly InputActionMap m_Overview;
        private List<IOverviewActions> m_OverviewActionsCallbackInterfaces = new List<IOverviewActions>();
        private readonly InputAction m_Overview_Rotate;
        private readonly InputAction m_Overview_Distance;
        private readonly InputAction m_Overview_PrimaryFingerPosition;
        private readonly InputAction m_Overview_SecondaryFingerPosition;
        private readonly InputAction m_Overview_PrimaryFingerDelta;
        private readonly InputAction m_Overview_SecondaryFingerDelta;
        private readonly InputAction m_Overview_SecondaryFingerPressed;
        private readonly InputAction m_Overview_SelectView;
        public struct OverviewActions
        {
            private @GameInputManager m_Wrapper;
            public OverviewActions(@GameInputManager wrapper) { m_Wrapper = wrapper; }
            public InputAction @Rotate => m_Wrapper.m_Overview_Rotate;
            public InputAction @Distance => m_Wrapper.m_Overview_Distance;
            public InputAction @PrimaryFingerPosition => m_Wrapper.m_Overview_PrimaryFingerPosition;
            public InputAction @SecondaryFingerPosition => m_Wrapper.m_Overview_SecondaryFingerPosition;
            public InputAction @PrimaryFingerDelta => m_Wrapper.m_Overview_PrimaryFingerDelta;
            public InputAction @SecondaryFingerDelta => m_Wrapper.m_Overview_SecondaryFingerDelta;
            public InputAction @SecondaryFingerPressed => m_Wrapper.m_Overview_SecondaryFingerPressed;
            public InputAction @SelectView => m_Wrapper.m_Overview_SelectView;
            public InputActionMap Get() { return m_Wrapper.m_Overview; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(OverviewActions set) { return set.Get(); }
            public void AddCallbacks(IOverviewActions instance)
            {
                if (instance == null || m_Wrapper.m_OverviewActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_OverviewActionsCallbackInterfaces.Add(instance);
                @Rotate.started += instance.OnRotate;
                @Rotate.performed += instance.OnRotate;
                @Rotate.canceled += instance.OnRotate;
                @Distance.started += instance.OnDistance;
                @Distance.performed += instance.OnDistance;
                @Distance.canceled += instance.OnDistance;
                @PrimaryFingerPosition.started += instance.OnPrimaryFingerPosition;
                @PrimaryFingerPosition.performed += instance.OnPrimaryFingerPosition;
                @PrimaryFingerPosition.canceled += instance.OnPrimaryFingerPosition;
                @SecondaryFingerPosition.started += instance.OnSecondaryFingerPosition;
                @SecondaryFingerPosition.performed += instance.OnSecondaryFingerPosition;
                @SecondaryFingerPosition.canceled += instance.OnSecondaryFingerPosition;
                @PrimaryFingerDelta.started += instance.OnPrimaryFingerDelta;
                @PrimaryFingerDelta.performed += instance.OnPrimaryFingerDelta;
                @PrimaryFingerDelta.canceled += instance.OnPrimaryFingerDelta;
                @SecondaryFingerDelta.started += instance.OnSecondaryFingerDelta;
                @SecondaryFingerDelta.performed += instance.OnSecondaryFingerDelta;
                @SecondaryFingerDelta.canceled += instance.OnSecondaryFingerDelta;
                @SecondaryFingerPressed.started += instance.OnSecondaryFingerPressed;
                @SecondaryFingerPressed.performed += instance.OnSecondaryFingerPressed;
                @SecondaryFingerPressed.canceled += instance.OnSecondaryFingerPressed;
                @SelectView.started += instance.OnSelectView;
                @SelectView.performed += instance.OnSelectView;
                @SelectView.canceled += instance.OnSelectView;
            }

            private void UnregisterCallbacks(IOverviewActions instance)
            {
                @Rotate.started -= instance.OnRotate;
                @Rotate.performed -= instance.OnRotate;
                @Rotate.canceled -= instance.OnRotate;
                @Distance.started -= instance.OnDistance;
                @Distance.performed -= instance.OnDistance;
                @Distance.canceled -= instance.OnDistance;
                @PrimaryFingerPosition.started -= instance.OnPrimaryFingerPosition;
                @PrimaryFingerPosition.performed -= instance.OnPrimaryFingerPosition;
                @PrimaryFingerPosition.canceled -= instance.OnPrimaryFingerPosition;
                @SecondaryFingerPosition.started -= instance.OnSecondaryFingerPosition;
                @SecondaryFingerPosition.performed -= instance.OnSecondaryFingerPosition;
                @SecondaryFingerPosition.canceled -= instance.OnSecondaryFingerPosition;
                @PrimaryFingerDelta.started -= instance.OnPrimaryFingerDelta;
                @PrimaryFingerDelta.performed -= instance.OnPrimaryFingerDelta;
                @PrimaryFingerDelta.canceled -= instance.OnPrimaryFingerDelta;
                @SecondaryFingerDelta.started -= instance.OnSecondaryFingerDelta;
                @SecondaryFingerDelta.performed -= instance.OnSecondaryFingerDelta;
                @SecondaryFingerDelta.canceled -= instance.OnSecondaryFingerDelta;
                @SecondaryFingerPressed.started -= instance.OnSecondaryFingerPressed;
                @SecondaryFingerPressed.performed -= instance.OnSecondaryFingerPressed;
                @SecondaryFingerPressed.canceled -= instance.OnSecondaryFingerPressed;
                @SelectView.started -= instance.OnSelectView;
                @SelectView.performed -= instance.OnSelectView;
                @SelectView.canceled -= instance.OnSelectView;
            }

            public void RemoveCallbacks(IOverviewActions instance)
            {
                if (m_Wrapper.m_OverviewActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IOverviewActions instance)
            {
                foreach (var item in m_Wrapper.m_OverviewActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_OverviewActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public OverviewActions @Overview => new OverviewActions(this);

        // Aim
        private readonly InputActionMap m_Aim;
        private List<IAimActions> m_AimActionsCallbackInterfaces = new List<IAimActions>();
        private readonly InputAction m_Aim_Yaw;
        private readonly InputAction m_Aim_Pitch;
        private readonly InputAction m_Aim_Power;
        private readonly InputAction m_Aim_PitchGyro;
        public struct AimActions
        {
            private @GameInputManager m_Wrapper;
            public AimActions(@GameInputManager wrapper) { m_Wrapper = wrapper; }
            public InputAction @Yaw => m_Wrapper.m_Aim_Yaw;
            public InputAction @Pitch => m_Wrapper.m_Aim_Pitch;
            public InputAction @Power => m_Wrapper.m_Aim_Power;
            public InputAction @PitchGyro => m_Wrapper.m_Aim_PitchGyro;
            public InputActionMap Get() { return m_Wrapper.m_Aim; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(AimActions set) { return set.Get(); }
            public void AddCallbacks(IAimActions instance)
            {
                if (instance == null || m_Wrapper.m_AimActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_AimActionsCallbackInterfaces.Add(instance);
                @Yaw.started += instance.OnYaw;
                @Yaw.performed += instance.OnYaw;
                @Yaw.canceled += instance.OnYaw;
                @Pitch.started += instance.OnPitch;
                @Pitch.performed += instance.OnPitch;
                @Pitch.canceled += instance.OnPitch;
                @Power.started += instance.OnPower;
                @Power.performed += instance.OnPower;
                @Power.canceled += instance.OnPower;
                @PitchGyro.started += instance.OnPitchGyro;
                @PitchGyro.performed += instance.OnPitchGyro;
                @PitchGyro.canceled += instance.OnPitchGyro;
            }

            private void UnregisterCallbacks(IAimActions instance)
            {
                @Yaw.started -= instance.OnYaw;
                @Yaw.performed -= instance.OnYaw;
                @Yaw.canceled -= instance.OnYaw;
                @Pitch.started -= instance.OnPitch;
                @Pitch.performed -= instance.OnPitch;
                @Pitch.canceled -= instance.OnPitch;
                @Power.started -= instance.OnPower;
                @Power.performed -= instance.OnPower;
                @Power.canceled -= instance.OnPower;
                @PitchGyro.started -= instance.OnPitchGyro;
                @PitchGyro.performed -= instance.OnPitchGyro;
                @PitchGyro.canceled -= instance.OnPitchGyro;
            }

            public void RemoveCallbacks(IAimActions instance)
            {
                if (m_Wrapper.m_AimActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IAimActions instance)
            {
                foreach (var item in m_Wrapper.m_AimActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_AimActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public AimActions @Aim => new AimActions(this);

        // AimTouch
        private readonly InputActionMap m_AimTouch;
        private List<IAimTouchActions> m_AimTouchActionsCallbackInterfaces = new List<IAimTouchActions>();
        private readonly InputAction m_AimTouch_Shoot;
        public struct AimTouchActions
        {
            private @GameInputManager m_Wrapper;
            public AimTouchActions(@GameInputManager wrapper) { m_Wrapper = wrapper; }
            public InputAction @Shoot => m_Wrapper.m_AimTouch_Shoot;
            public InputActionMap Get() { return m_Wrapper.m_AimTouch; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(AimTouchActions set) { return set.Get(); }
            public void AddCallbacks(IAimTouchActions instance)
            {
                if (instance == null || m_Wrapper.m_AimTouchActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_AimTouchActionsCallbackInterfaces.Add(instance);
                @Shoot.started += instance.OnShoot;
                @Shoot.performed += instance.OnShoot;
                @Shoot.canceled += instance.OnShoot;
            }

            private void UnregisterCallbacks(IAimTouchActions instance)
            {
                @Shoot.started -= instance.OnShoot;
                @Shoot.performed -= instance.OnShoot;
                @Shoot.canceled -= instance.OnShoot;
            }

            public void RemoveCallbacks(IAimTouchActions instance)
            {
                if (m_Wrapper.m_AimTouchActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IAimTouchActions instance)
            {
                foreach (var item in m_Wrapper.m_AimTouchActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_AimTouchActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public AimTouchActions @AimTouch => new AimTouchActions(this);
        public interface IOverviewActions
        {
            void OnRotate(InputAction.CallbackContext context);
            void OnDistance(InputAction.CallbackContext context);
            void OnPrimaryFingerPosition(InputAction.CallbackContext context);
            void OnSecondaryFingerPosition(InputAction.CallbackContext context);
            void OnPrimaryFingerDelta(InputAction.CallbackContext context);
            void OnSecondaryFingerDelta(InputAction.CallbackContext context);
            void OnSecondaryFingerPressed(InputAction.CallbackContext context);
            void OnSelectView(InputAction.CallbackContext context);
        }
        public interface IAimActions
        {
            void OnYaw(InputAction.CallbackContext context);
            void OnPitch(InputAction.CallbackContext context);
            void OnPower(InputAction.CallbackContext context);
            void OnPitchGyro(InputAction.CallbackContext context);
        }
        public interface IAimTouchActions
        {
            void OnShoot(InputAction.CallbackContext context);
        }
    }
}
